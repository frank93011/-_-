from tkinter import *
import random
from unit_test import *

# 將會被許多涵式用到的變數設為global變數

# tkinter 部分
# root：Tk的instance, 整個視窗程式的root
# frame：視窗中的一塊佈局 
# canvas：畫圖區域，用來畫貪吃蛇
root = None
frame = None
canvas = None


# 遊戲區的grid數量
# grid_width：遊戲區有多少grid寬，本例為36
# grid_height：遊戲區有多少gird高，本例為24
grid_width = 0
grid_height = 0

# canvas 畫圖區部分，單位都為pixel
# unit：一個grid有多少px，本例為18
# wall_width：牆壁寬，本例為unit / 3，為6px
# width：遊戲區的寬度有多少px
# height：遊戲區的高度有多少px
# offset：canvas鑲嵌在frame中造成3px的白邊框
unit = 0
wall_width = 0
width = 0
height = 0
offset = 3


def gen_win(u, w, h):
    '''
    step 1: 
        這個函式會做a、b、c、d四個動作
        參數u：讓使用者自訂一個grid有幾個px
        參數w：整個視窗有多少px寬
        參數h：整個視窗有多少px高

        a. 創造主視窗
        b. 透過u, w, h計算unit、wall_width、width、height應該有的值，並設進去
        c. 創造一個Frame instance，存入變數frame，綁定在root底下
        d. 創造一個Canvas instance，存入變數canvas，綁定在frame底下
    '''

    ## 因為要在涵式內設定下列global變數，因此要用global關鍵字
    global grid_width
    global grid_height
    global unit
    global wall_width
    global width
    global height

    ## 因為要在涵式內設定下列global變數，因此要用global關鍵字    
    grid_width = w
    grid_height = h
    unit = u

    ## wall_width為牆壁寬，設為unit的1/3，因為單位為px，所以計算的結果不應為float，必須為int
    wall_width = int(unit/3)

    ## width為視窗的寬度，單位為px
    ## 寬度應為 offset + wall_width + wall_width + unit * grid_width + wall_width + wall_width + offset
    ## height為視窗的高度，單位為px
    ## 高度應為 offset + wall_width + wall_width + unit * grid_height + wall_width + wall_width + offset
    width = unit * grid_width + 4 * wall_width + 2 * offset
    height = unit * grid_height + 4 * wall_width + 2 * offset

    ## 配置root的長寬跟左上角座標
    ## geo_setting為'widthxheight+30+30'的字串
    ## 可將root設為寬度width px，高度為height px的視窗，左上角座標為(30, 30)
    geo_setting = str(width) + "x" + str(height) + "+30+30" 

    global root
    global frame
    global canvas

    ## 創造主視窗，設為root
    root = Tk()

    ## 用geo_setting字串配置主視窗大小
    root.geometry(geo_setting)
    root.title("Snake game")

    ## 創造一個Frame instance，存入變數frame，綁定在root底下
    ## frame寬度設為前面算出來的width，高度設為前面算出來的height
    frame = Frame(master = root, width = width, height = height)

    ## 創造一個Canvas instance，存入變數canvas，綁定在frame底下
    ## canvas的背景色設為'yellow'
    ## frame寬度設為前面算出來的width，高度設為前面算出來的height
    canvas = Canvas(master = frame, bg = 'yellow', width = width - 2 * offset, height = height - 2 * offset)
 
    ## 放置frame跟canvas       
    frame.pack()
    canvas.pack()
    return

def draw_walls():
    '''
    step 2:
        繪製遊戲區的牆壁
        wall1：左方牆
        wall2：下方牆
        wall3：右方牆
        wall4：上方牆
    '''
    ## 由於要用create_rectangle來畫牆，所以要定義好wall1 ~ wall4的左上角跟右下角座標
    ## 左上都用 _x1、_y1，右下都用 _x2、_y2命名
    ## wall_margin: 牆之前的空間，即offset(白邊) + wall_width(黃邊框)
    ## 舉例來說，offset若為3px，wall_width若為6px，則wall_margin為9px
    wall_margin = offset + wall_width

    ## 分別計算wall1 ~ wall4的左上、右下座標
    wall1_x1 = wall_margin
    wall1_y1 = wall_margin
    wall1_x2 = wall1_x1 + (wall_width - 1)
    wall1_y2 = ((height - 1)) - wall_margin

    wall3_x1 = ((width - 1)) - (wall_margin + wall_width - 1)
    wall3_y1 = wall1_y1
    wall3_x2 = ((width - 1)) - wall_margin
    wall3_y2 = wall1_y2
    
    wall2_x1 = wall1_x2 + 1
    wall2_y1 = wall1_y2 - (wall_width - 1)
    wall2_x2 = wall3_x1 - 1
    wall2_y2 = wall1_y2

    wall4_x1 = wall2_x1
    wall4_y1 = wall1_y1
    wall4_x2 = wall2_x2
    wall4_y2 = wall1_y1 + (wall_width - 1)

    ## 將wall1的左上座標(wall1_x1, wall1_y1)、右下座標(wall1_x2, wall1_y2)包成wall1這個list
    ## wall2 ~ wall4也是類似
    wall1 = [(wall1_x1, wall1_y1), (wall1_x2, wall1_y2)]
    wall2 = [(wall2_x1, wall2_y1), (wall2_x2, wall2_y2)]
    wall3 = [(wall3_x1, wall3_y1), (wall3_x2, wall3_y2)]
    wall4 = [(wall4_x1, wall4_y1), (wall4_x2, wall4_y2)]

    ## 將wall1的左上座標(wall1_x1, wall1_y1)、右下座標(wall1_x2, wall1_y2)丟進
    ## canvas.create_rectangle當作參數
    ## *wall1是特殊語法，意思是將wall1裡面所有的東西攤平、展開，所以
    ## canvas.create_rectangle(*wall1, ...) 等價為
    ## canvas.create_rectangle(wall1_x1, wall1_y1, wall1_x2, wall1_y2, ...)
    ## 此外 outline參數指的是長方形的外框，預設是黑色'black'，我們改成藍色'blue'        
    canvas.create_rectangle(*wall1, outline = 'blue', fill = 'blue')
    canvas.create_rectangle(*wall2, outline = 'blue', fill = 'blue')
    canvas.create_rectangle(*wall3, outline = 'blue', fill = 'blue')
    canvas.create_rectangle(*wall4, outline = 'blue', fill = 'blue')
    return

def grid_to_pixel(coor):
    '''
    step 3-1: 
        定義一個grid座標與px座標轉換的涵式，將grid的左上角對應到正確的px座標

        參數coor：代表grid座標的(x座標, y座標)，型別為tuple
        return：grid座標轉換後的左上角px座標，型別為tuple
    '''

    ## 將coor[0], coor[1]分別assign給xgrid, ygrid 以方便計算
    (xgrid, ygrid) = coor

    ## xpx代表x方向的px座標
    ## xgrid = 0 時對應到的xpx為offset(白邊) + 2 * wall_width(黃邊框 + 藍牆)
    ## 當xgrid = 1, 2, 3...時，應該還要加上1*unit, 2*unit, 3*unit，也就是unit * xgrid
    ## ypx以此類推
    xpx = offset + 2 * wall_width + unit * xgrid
    ypx = offset + 2 * wall_width + unit * ygrid
    return (xpx, ypx)

def grid_br_corner(coor_px):
    '''
    step 3-2:
        canvas總是需要2個px座標(分別是左上角、右下角)才能創造了一個rectangle(矩形)。
        我們已經在step 3-1的grid_to_pixel()將grid座標轉換成rectangle的左上角px座標，
        右下角px座標就透過grid_br_corner(coor_px)來完成。

        參數coor_px：grid左上角的px座標，型別為tuple
        return：grid右下角的px座標，型別為tuple
    '''

    ## 將coor_px[0], coor_px[1]分別assign給x1px, y1px以方便計算
    ## 例如 coor_px = (195, 141)則 x1px為195, y1px為141，要注意coor_px是px座標
    ## 因此x、y也是px座標
    (x1px, y1px) = coor_px

    ## 以(x1px, y1px)為grid左上角px座標，若grid右下角px座標為(y2px, y2px)，位置如下所示
    ## (x1px, y1px)
    ##       ☒☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐  一個grid有unit(假設為18)個px寬，
    ##       ☐                ☐  x2px應為x1px + unit - 1(即 195 + 18 - 1)
    ##       ☐                ☐  y2px以此類推
    ##       ☐                ☐
    ##             ...
    ##       ☐                ☐
    ##       ☐                ☐ 
    ##       ☐                ☐
    ##       ☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐☐☒
    ##                        (x2px, y2px)


    y2px = ??
    y2px = ??
    return (x2px, y2px)


if __name__ == "__main__":
    gen_win(18, 36, 24)
    draw_walls()
    
    test_case = [(15, 15), (15, 33), (15, 51), (15, 69), (15, 87), (15, 105), (15, 123), (15, 141), (15, 159), (15, 177), (15, 195), (15, 213), (15, 231), (15, 249), (15, 267), (15, 285), (15, 303), (15, 321), (15, 339), (15, 357), (15, 375), (15, 393), (15, 411), (15, 429), (33, 15), (33, 33), (33, 51), (33, 69), (33, 87), (33, 105), (33, 123), (33, 141), (33, 159), (33, 177), (33, 195), (33, 213), (33, 231), (33, 249), (33, 267), (33, 285), (33, 303), (33, 321), (33, 339), (33, 357), (33, 375), (33, 393), (33, 411), (33, 429), (51, 15), (51, 33), (51, 51), (51, 69), (51, 87), (51, 105), (51, 123), (51, 141), (51, 159), (51, 177), (51, 195), (51, 213), (51, 231), (51, 249), (51, 267), (51, 285), (51, 303), (51, 321), (51, 339), (51, 357), (51, 375), (51, 393), (51, 411), (51, 429), (69, 15), (69, 33), (69, 51), (69, 69), (69, 87), (69, 105), (69, 123), (69, 141), (69, 159), (69, 177), (69, 195), (69, 213), (69, 231), (69, 249), (69, 267), (69, 285), (69, 303), (69, 321), (69, 339), (69, 357), (69, 375), (69, 393), (69, 411), (69, 429), (87, 15), (87, 33), (87, 51), (87, 69), (87, 87), (87, 105), (87, 123), (87, 141), (87, 159), (87, 177), (87, 195), (87, 213), (87, 231), (87, 249), (87, 267), (87, 285), (87, 303), (87, 321), (87, 339), (87, 357), (87, 375), (87, 393), (87, 411), (87, 429), (105, 15), (105, 33), (105, 51), (105, 69), (105, 87), (105, 105), (105, 123), (105, 141), (105, 159), (105, 177), (105, 195), (105, 213), (105, 231), (105, 249), (105, 267), (105, 285), (105, 303), (105, 321), (105, 339), (105, 357), (105, 375), (105, 393), (105, 411), (105, 429), (123, 15), (123, 33), (123, 51), (123, 69), (123, 87), (123, 105), (123, 123), (123, 141), (123, 159), (123, 177), (123, 195), (123, 213), (123, 231), (123, 249), (123, 267), (123, 285), (123, 303), (123, 321), (123, 339), (123, 357), (123, 375), (123, 393), (123, 411), (123, 429), (141, 15), (141, 33), (141, 51), (141, 69), (141, 87), (141, 105), (141, 123), (141, 141), (141, 159), (141, 177), (141, 195), (141, 213), (141, 231), (141, 249), (141, 267), (141, 285), (141, 303), (141, 321), (141, 339), (141, 357), (141, 375), (141, 393), (141, 411), (141, 429), (159, 15), (159, 33), (159, 51), (159, 69), (159, 87), (159, 105), (159, 123), (159, 141), (159, 159), (159, 177), (159, 195), (159, 213), (159, 231), (159, 249), (159, 267), (159, 285), (159, 303), (159, 321), (159, 339), (159, 357), (159, 375), (159, 393), (159, 411), (159, 429), (177, 15), (177, 33), (177, 51), (177, 69), (177, 87), (177, 105), (177, 123), (177, 141), (177, 159), (177, 177), (177, 195), (177, 213), (177, 231), (177, 249), (177, 267), (177, 285), (177, 303), (177, 321), (177, 339), (177, 357), (177, 375), (177, 393), (177, 411), (177, 429), (195, 15), (195, 33), (195, 51), (195, 69), (195, 87), (195, 105), (195, 123), (195, 141), (195, 159), (195, 177), (195, 195), (195, 213), (195, 231), (195, 249), (195, 267), (195, 285), (195, 303), (195, 321), (195, 339), (195, 357), (195, 375), (195, 393), (195, 411), (195, 429), (213, 15), (213, 33), (213, 51), (213, 69), (213, 87), (213, 105), (213, 123), (213, 141), (213, 159), (213, 177), (213, 195), (213, 213), (213, 231), (213, 249), (213, 267), (213, 285), (213, 303), (213, 321), (213, 339), (213, 357), (213, 375), (213, 393), (213, 411), (213, 429), (231, 15), (231, 33), (231, 51), (231, 69), (231, 87), (231, 105), (231, 123), (231, 141), (231, 159), (231, 177), (231, 195), (231, 213), (231, 231), (231, 249), (231, 267), (231, 285), (231, 303), (231, 321), (231, 339), (231, 357), (231, 375), (231, 393), (231, 411), (231, 429), (249, 15), (249, 33), (249, 51), (249, 69), (249, 87), (249, 105), (249, 123), (249, 141), (249, 159), (249, 177), (249, 195), (249, 213), (249, 231), (249, 249), (249, 267), (249, 285), (249, 303), (249, 321), (249, 339), (249, 357), (249, 375), (249, 393), (249, 411), (249, 429), (267, 15), (267, 33), (267, 51), (267, 69), (267, 87), (267, 105), (267, 123), (267, 141), (267, 159), (267, 177), (267, 195), (267, 213), (267, 231), (267, 249), (267, 267), (267, 285), (267, 303), (267, 321), (267, 339), (267, 357), (267, 375), (267, 393), (267, 411), (267, 429), (285, 15), (285, 33), (285, 51), (285, 69), (285, 87), (285, 105), (285, 123), (285, 141), (285, 159), (285, 177), (285, 195), (285, 213), (285, 231), (285, 249), (285, 267), (285, 285), (285, 303), (285, 321), (285, 339), (285, 357), (285, 375), (285, 393), (285, 411), (285, 429), (303, 15), (303, 33), (303, 51), (303, 69), (303, 87), (303, 105), (303, 123), (303, 141), (303, 159), (303, 177), (303, 195), (303, 213), (303, 231), (303, 249), (303, 267), (303, 285), (303, 303), (303, 321), (303, 339), (303, 357), (303, 375), (303, 393), (303, 411), (303, 429), (321, 15), (321, 33), (321, 51), (321, 69), (321, 87), (321, 105), (321, 123), (321, 141), (321, 159), (321, 177), (321, 195), (321, 213), (321, 231), (321, 249), (321, 267), (321, 285), (321, 303), (321, 321), (321, 339), (321, 357), (321, 375), (321, 393), (321, 411), (321, 429), (339, 15), (339, 33), (339, 51), (339, 69), (339, 87), (339, 105), (339, 123), (339, 141), (339, 159), (339, 177), (339, 195), (339, 213), (339, 231), (339, 249), (339, 267), (339, 285), (339, 303), (339, 321), (339, 339), (339, 357), (339, 375), (339, 393), (339, 411), (339, 429), (357, 15), (357, 33), (357, 51), (357, 69), (357, 87), (357, 105), (357, 123), (357, 141), (357, 159), (357, 177), (357, 195), (357, 213), (357, 231), (357, 249), (357, 267), (357, 285), (357, 303), (357, 321), (357, 339), (357, 357), (357, 375), (357, 393), (357, 411), (357, 429), (375, 15), (375, 33), (375, 51), (375, 69), (375, 87), (375, 105), (375, 123), (375, 141), (375, 159), (375, 177), (375, 195), (375, 213), (375, 231), (375, 249), (375, 267), (375, 285), (375, 303), (375, 321), (375, 339), (375, 357), (375, 375), (375, 393), (375, 411), (375, 429), (393, 15), (393, 33), (393, 51), (393, 69), (393, 87), (393, 105), (393, 123), (393, 141), (393, 159), (393, 177), (393, 195), (393, 213), (393, 231), (393, 249), (393, 267), (393, 285), (393, 303), (393, 321), (393, 339), (393, 357), (393, 375), (393, 393), (393, 411), (393, 429), (411, 15), (411, 33), (411, 51), (411, 69), (411, 87), (411, 105), (411, 123), (411, 141), (411, 159), (411, 177), (411, 195), (411, 213), (411, 231), (411, 249), (411, 267), (411, 285), (411, 303), (411, 321), (411, 339), (411, 357), (411, 375), (411, 393), (411, 411), (411, 429), (429, 15), (429, 33), (429, 51), (429, 69), (429, 87), (429, 105), (429, 123), (429, 141), (429, 159), (429, 177), (429, 195), (429, 213), (429, 231), (429, 249), (429, 267), (429, 285), (429, 303), (429, 321), (429, 339), (429, 357), (429, 375), (429, 393), (429, 411), (429, 429), (447, 15), (447, 33), (447, 51), (447, 69), (447, 87), (447, 105), (447, 123), (447, 141), (447, 159), (447, 177), (447, 195), (447, 213), (447, 231), (447, 249), (447, 267), (447, 285), (447, 303), (447, 321), (447, 339), (447, 357), (447, 375), (447, 393), (447, 411), (447, 429), (465, 15), (465, 33), (465, 51), (465, 69), (465, 87), (465, 105), (465, 123), (465, 141), (465, 159), (465, 177), (465, 195), (465, 213), (465, 231), (465, 249), (465, 267), (465, 285), (465, 303), (465, 321), (465, 339), (465, 357), (465, 375), (465, 393), (465, 411), (465, 429), (483, 15), (483, 33), (483, 51), (483, 69), (483, 87), (483, 105), (483, 123), (483, 141), (483, 159), (483, 177), (483, 195), (483, 213), (483, 231), (483, 249), (483, 267), (483, 285), (483, 303), (483, 321), (483, 339), (483, 357), (483, 375), (483, 393), (483, 411), (483, 429), (501, 15), (501, 33), (501, 51), (501, 69), (501, 87), (501, 105), (501, 123), (501, 141), (501, 159), (501, 177), (501, 195), (501, 213), (501, 231), (501, 249), (501, 267), (501, 285), (501, 303), (501, 321), (501, 339), (501, 357), (501, 375), (501, 393), (501, 411), (501, 429), (519, 15), (519, 33), (519, 51), (519, 69), (519, 87), (519, 105), (519, 123), (519, 141), (519, 159), (519, 177), (519, 195), (519, 213), (519, 231), (519, 249), (519, 267), (519, 285), (519, 303), (519, 321), (519, 339), (519, 357), (519, 375), (519, 393), (519, 411), (519, 429), (537, 15), (537, 33), (537, 51), (537, 69), (537, 87), (537, 105), (537, 123), (537, 141), (537, 159), (537, 177), (537, 195), (537, 213), (537, 231), (537, 249), (537, 267), (537, 285), (537, 303), (537, 321), (537, 339), (537, 357), (537, 375), (537, 393), (537, 411), (537, 429), (555, 15), (555, 33), (555, 51), (555, 69), (555, 87), (555, 105), (555, 123), (555, 141), (555, 159), (555, 177), (555, 195), (555, 213), (555, 231), (555, 249), (555, 267), (555, 285), (555, 303), (555, 321), (555, 339), (555, 357), (555, 375), (555, 393), (555, 411), (555, 429), (573, 15), (573, 33), (573, 51), (573, 69), (573, 87), (573, 105), (573, 123), (573, 141), (573, 159), (573, 177), (573, 195), (573, 213), (573, 231), (573, 249), (573, 267), (573, 285), (573, 303), (573, 321), (573, 339), (573, 357), (573, 375), (573, 393), (573, 411), (573, 429), (591, 15), (591, 33), (591, 51), (591, 69), (591, 87), (591, 105), (591, 123), (591, 141), (591, 159), (591, 177), (591, 195), (591, 213), (591, 231), (591, 249), (591, 267), (591, 285), (591, 303), (591, 321), (591, 339), (591, 357), (591, 375), (591, 393), (591, 411), (591, 429), (609, 15), (609, 33), (609, 51), (609, 69), (609, 87), (609, 105), (609, 123), (609, 141), (609, 159), (609, 177), (609, 195), (609, 213), (609, 231), (609, 249), (609, 267), (609, 285), (609, 303), (609, 321), (609, 339), (609, 357), (609, 375), (609, 393), (609, 411), (609, 429), (627, 15), (627, 33), (627, 51), (627, 69), (627, 87), (627, 105), (627, 123), (627, 141), (627, 159), (627, 177), (627, 195), (627, 213), (627, 231), (627, 249), (627, 267), (627, 285), (627, 303), (627, 321), (627, 339), (627, 357), (627, 375), (627, 393), (627, 411), (627, 429), (645, 15), (645, 33), (645, 51), (645, 69), (645, 87), (645, 105), (645, 123), (645, 141), (645, 159), (645, 177), (645, 195), (645, 213), (645, 231), (645, 249), (645, 267), (645, 285), (645, 303), (645, 321), (645, 339), (645, 357), (645, 375), (645, 393), (645, 411), (645, 429)]
    answer_case = [(32, 32), (32, 50), (32, 68), (32, 86), (32, 104), (32, 122), (32, 140), (32, 158), (32, 176), (32, 194), (32, 212), (32, 230), (32, 248), (32, 266), (32, 284), (32, 302), (32, 320), (32, 338), (32, 356), (32, 374), (32, 392), (32, 410), (32, 428), (32, 446), (50, 32), (50, 50), (50, 68), (50, 86), (50, 104), (50, 122), (50, 140), (50, 158), (50, 176), (50, 194), (50, 212), (50, 230), (50, 248), (50, 266), (50, 284), (50, 302), (50, 320), (50, 338), (50, 356), (50, 374), (50, 392), (50, 410), (50, 428), (50, 446), (68, 32), (68, 50), (68, 68), (68, 86), (68, 104), (68, 122), (68, 140), (68, 158), (68, 176), (68, 194), (68, 212), (68, 230), (68, 248), (68, 266), (68, 284), (68, 302), (68, 320), (68, 338), (68, 356), (68, 374), (68, 392), (68, 410), (68, 428), (68, 446), (86, 32), (86, 50), (86, 68), (86, 86), (86, 104), (86, 122), (86, 140), (86, 158), (86, 176), (86, 194), (86, 212), (86, 230), (86, 248), (86, 266), (86, 284), (86, 302), (86, 320), (86, 338), (86, 356), (86, 374), (86, 392), (86, 410), (86, 428), (86, 446), (104, 32), (104, 50), (104, 68), (104, 86), (104, 104), (104, 122), (104, 140), (104, 158), (104, 176), (104, 194), (104, 212), (104, 230), (104, 248), (104, 266), (104, 284), (104, 302), (104, 320), (104, 338), (104, 356), (104, 374), (104, 392), (104, 410), (104, 428), (104, 446), (122, 32), (122, 50), (122, 68), (122, 86), (122, 104), (122, 122), (122, 140), (122, 158), (122, 176), (122, 194), (122, 212), (122, 230), (122, 248), (122, 266), (122, 284), (122, 302), (122, 320), (122, 338), (122, 356), (122, 374), (122, 392), (122, 410), (122, 428), (122, 446), (140, 32), (140, 50), (140, 68), (140, 86), (140, 104), (140, 122), (140, 140), (140, 158), (140, 176), (140, 194), (140, 212), (140, 230), (140, 248), (140, 266), (140, 284), (140, 302), (140, 320), (140, 338), (140, 356), (140, 374), (140, 392), (140, 410), (140, 428), (140, 446), (158, 32), (158, 50), (158, 68), (158, 86), (158, 104), (158, 122), (158, 140), (158, 158), (158, 176), (158, 194), (158, 212), (158, 230), (158, 248), (158, 266), (158, 284), (158, 302), (158, 320), (158, 338), (158, 356), (158, 374), (158, 392), (158, 410), (158, 428), (158, 446), (176, 32), (176, 50), (176, 68), (176, 86), (176, 104), (176, 122), (176, 140), (176, 158), (176, 176), (176, 194), (176, 212), (176, 230), (176, 248), (176, 266), (176, 284), (176, 302), (176, 320), (176, 338), (176, 356), (176, 374), (176, 392), (176, 410), (176, 428), (176, 446), (194, 32), (194, 50), (194, 68), (194, 86), (194, 104), (194, 122), (194, 140), (194, 158), (194, 176), (194, 194), (194, 212), (194, 230), (194, 248), (194, 266), (194, 284), (194, 302), (194, 320), (194, 338), (194, 356), (194, 374), (194, 392), (194, 410), (194, 428), (194, 446), (212, 32), (212, 50), (212, 68), (212, 86), (212, 104), (212, 122), (212, 140), (212, 158), (212, 176), (212, 194), (212, 212), (212, 230), (212, 248), (212, 266), (212, 284), (212, 302), (212, 320), (212, 338), (212, 356), (212, 374), (212, 392), (212, 410), (212, 428), (212, 446), (230, 32), (230, 50), (230, 68), (230, 86), (230, 104), (230, 122), (230, 140), (230, 158), (230, 176), (230, 194), (230, 212), (230, 230), (230, 248), (230, 266), (230, 284), (230, 302), (230, 320), (230, 338), (230, 356), (230, 374), (230, 392), (230, 410), (230, 428), (230, 446), (248, 32), (248, 50), (248, 68), (248, 86), (248, 104), (248, 122), (248, 140), (248, 158), (248, 176), (248, 194), (248, 212), (248, 230), (248, 248), (248, 266), (248, 284), (248, 302), (248, 320), (248, 338), (248, 356), (248, 374), (248, 392), (248, 410), (248, 428), (248, 446), (266, 32), (266, 50), (266, 68), (266, 86), (266, 104), (266, 122), (266, 140), (266, 158), (266, 176), (266, 194), (266, 212), (266, 230), (266, 248), (266, 266), (266, 284), (266, 302), (266, 320), (266, 338), (266, 356), (266, 374), (266, 392), (266, 410), (266, 428), (266, 446), (284, 32), (284, 50), (284, 68), (284, 86), (284, 104), (284, 122), (284, 140), (284, 158), (284, 176), (284, 194), (284, 212), (284, 230), (284, 248), (284, 266), (284, 284), (284, 302), (284, 320), (284, 338), (284, 356), (284, 374), (284, 392), (284, 410), (284, 428), (284, 446), (302, 32), (302, 50), (302, 68), (302, 86), (302, 104), (302, 122), (302, 140), (302, 158), (302, 176), (302, 194), (302, 212), (302, 230), (302, 248), (302, 266), (302, 284), (302, 302), (302, 320), (302, 338), (302, 356), (302, 374), (302, 392), (302, 410), (302, 428), (302, 446), (320, 32), (320, 50), (320, 68), (320, 86), (320, 104), (320, 122), (320, 140), (320, 158), (320, 176), (320, 194), (320, 212), (320, 230), (320, 248), (320, 266), (320, 284), (320, 302), (320, 320), (320, 338), (320, 356), (320, 374), (320, 392), (320, 410), (320, 428), (320, 446), (338, 32), (338, 50), (338, 68), (338, 86), (338, 104), (338, 122), (338, 140), (338, 158), (338, 176), (338, 194), (338, 212), (338, 230), (338, 248), (338, 266), (338, 284), (338, 302), (338, 320), (338, 338), (338, 356), (338, 374), (338, 392), (338, 410), (338, 428), (338, 446), (356, 32), (356, 50), (356, 68), (356, 86), (356, 104), (356, 122), (356, 140), (356, 158), (356, 176), (356, 194), (356, 212), (356, 230), (356, 248), (356, 266), (356, 284), (356, 302), (356, 320), (356, 338), (356, 356), (356, 374), (356, 392), (356, 410), (356, 428), (356, 446), (374, 32), (374, 50), (374, 68), (374, 86), (374, 104), (374, 122), (374, 140), (374, 158), (374, 176), (374, 194), (374, 212), (374, 230), (374, 248), (374, 266), (374, 284), (374, 302), (374, 320), (374, 338), (374, 356), (374, 374), (374, 392), (374, 410), (374, 428), (374, 446), (392, 32), (392, 50), (392, 68), (392, 86), (392, 104), (392, 122), (392, 140), (392, 158), (392, 176), (392, 194), (392, 212), (392, 230), (392, 248), (392, 266), (392, 284), (392, 302), (392, 320), (392, 338), (392, 356), (392, 374), (392, 392), (392, 410), (392, 428), (392, 446), (410, 32), (410, 50), (410, 68), (410, 86), (410, 104), (410, 122), (410, 140), (410, 158), (410, 176), (410, 194), (410, 212), (410, 230), (410, 248), (410, 266), (410, 284), (410, 302), (410, 320), (410, 338), (410, 356), (410, 374), (410, 392), (410, 410), (410, 428), (410, 446), (428, 32), (428, 50), (428, 68), (428, 86), (428, 104), (428, 122), (428, 140), (428, 158), (428, 176), (428, 194), (428, 212), (428, 230), (428, 248), (428, 266), (428, 284), (428, 302), (428, 320), (428, 338), (428, 356), (428, 374), (428, 392), (428, 410), (428, 428), (428, 446), (446, 32), (446, 50), (446, 68), (446, 86), (446, 104), (446, 122), (446, 140), (446, 158), (446, 176), (446, 194), (446, 212), (446, 230), (446, 248), (446, 266), (446, 284), (446, 302), (446, 320), (446, 338), (446, 356), (446, 374), (446, 392), (446, 410), (446, 428), (446, 446), (464, 32), (464, 50), (464, 68), (464, 86), (464, 104), (464, 122), (464, 140), (464, 158), (464, 176), (464, 194), (464, 212), (464, 230), (464, 248), (464, 266), (464, 284), (464, 302), (464, 320), (464, 338), (464, 356), (464, 374), (464, 392), (464, 410), (464, 428), (464, 446), (482, 32), (482, 50), (482, 68), (482, 86), (482, 104), (482, 122), (482, 140), (482, 158), (482, 176), (482, 194), (482, 212), (482, 230), (482, 248), (482, 266), (482, 284), (482, 302), (482, 320), (482, 338), (482, 356), (482, 374), (482, 392), (482, 410), (482, 428), (482, 446), (500, 32), (500, 50), (500, 68), (500, 86), (500, 104), (500, 122), (500, 140), (500, 158), (500, 176), (500, 194), (500, 212), (500, 230), (500, 248), (500, 266), (500, 284), (500, 302), (500, 320), (500, 338), (500, 356), (500, 374), (500, 392), (500, 410), (500, 428), (500, 446), (518, 32), (518, 50), (518, 68), (518, 86), (518, 104), (518, 122), (518, 140), (518, 158), (518, 176), (518, 194), (518, 212), (518, 230), (518, 248), (518, 266), (518, 284), (518, 302), (518, 320), (518, 338), (518, 356), (518, 374), (518, 392), (518, 410), (518, 428), (518, 446), (536, 32), (536, 50), (536, 68), (536, 86), (536, 104), (536, 122), (536, 140), (536, 158), (536, 176), (536, 194), (536, 212), (536, 230), (536, 248), (536, 266), (536, 284), (536, 302), (536, 320), (536, 338), (536, 356), (536, 374), (536, 392), (536, 410), (536, 428), (536, 446), (554, 32), (554, 50), (554, 68), (554, 86), (554, 104), (554, 122), (554, 140), (554, 158), (554, 176), (554, 194), (554, 212), (554, 230), (554, 248), (554, 266), (554, 284), (554, 302), (554, 320), (554, 338), (554, 356), (554, 374), (554, 392), (554, 410), (554, 428), (554, 446), (572, 32), (572, 50), (572, 68), (572, 86), (572, 104), (572, 122), (572, 140), (572, 158), (572, 176), (572, 194), (572, 212), (572, 230), (572, 248), (572, 266), (572, 284), (572, 302), (572, 320), (572, 338), (572, 356), (572, 374), (572, 392), (572, 410), (572, 428), (572, 446), (590, 32), (590, 50), (590, 68), (590, 86), (590, 104), (590, 122), (590, 140), (590, 158), (590, 176), (590, 194), (590, 212), (590, 230), (590, 248), (590, 266), (590, 284), (590, 302), (590, 320), (590, 338), (590, 356), (590, 374), (590, 392), (590, 410), (590, 428), (590, 446), (608, 32), (608, 50), (608, 68), (608, 86), (608, 104), (608, 122), (608, 140), (608, 158), (608, 176), (608, 194), (608, 212), (608, 230), (608, 248), (608, 266), (608, 284), (608, 302), (608, 320), (608, 338), (608, 356), (608, 374), (608, 392), (608, 410), (608, 428), (608, 446), (626, 32), (626, 50), (626, 68), (626, 86), (626, 104), (626, 122), (626, 140), (626, 158), (626, 176), (626, 194), (626, 212), (626, 230), (626, 248), (626, 266), (626, 284), (626, 302), (626, 320), (626, 338), (626, 356), (626, 374), (626, 392), (626, 410), (626, 428), (626, 446), (644, 32), (644, 50), (644, 68), (644, 86), (644, 104), (644, 122), (644, 140), (644, 158), (644, 176), (644, 194), (644, 212), (644, 230), (644, 248), (644, 266), (644, 284), (644, 302), (644, 320), (644, 338), (644, 356), (644, 374), (644, 392), (644, 410), (644, 428), (644, 446), (662, 32), (662, 50), (662, 68), (662, 86), (662, 104), (662, 122), (662, 140), (662, 158), (662, 176), (662, 194), (662, 212), (662, 230), (662, 248), (662, 266), (662, 284), (662, 302), (662, 320), (662, 338), (662, 356), (662, 374), (662, 392), (662, 410), (662, 428), (662, 446)]
    unit_test(grid_br_corner, test_case, answer_case)
